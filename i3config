# i3 config file (v4)

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# set no startup id variable
set $ns --no-startup-id

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
#bindsym $mod+n border normal

#font 
font pango:System San Francisco Display 13

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec terminal
bindsym $mod+Return exec urxvt

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+d exec $ns dmenu_recency -l 50 -fn 'System San Francisco Display-16'

# launch categorized menu
bindsym $mod+z exec $ns morc_menu

# swap caps lock and escape
exec_always $ns xmodmap -e "clear lock"
exec_always $ns xmodmap -e "keycode 9 = Caps_Lock NoSymbol Caps_Lock"
exec_always $ns xmodmap -e "keycode 66 = Escape NoSymbol Escape"

# set up dual monitors
exec_always $ns xrandr --output eDP1 --mode 1366x768 --pos 0x0 --rotate normal \
--output HDMI1 --primary --mode 1920x1080 --pos 1366x0 --rotate normal --output VIRTUAL1 --off


################################################################################################
## sound-section - DO NOT EDIT if you wish to automatically upgrade Alsa -> Pulseaudio later! ##
################################################################################################

exec $ns volumeicon
bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
#exec $ns pulseaudio
#exec $ns pa-applet
#bindsym $mod+Ctrl+m exec pavucontrol

################################################################################################

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

# Start Applications
bindsym $mod+Ctrl+b exec terminal -e 'bmenu'
# bindsym $mod+F3 exec pcmanfm
bindsym $mod+F3 exec ranger
bindsym $mod+Shift+F3 exec gksu pcmanfm
#bindsym $mod+F5 exec terminal -e 'mocp'
# bindsym $mod+t exec $ns pkill compton
# bindsym $mod+Ctrl+t exec $ns compton -b
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'killed & restarted dunst'"
bindsym Print exec $ns i3-scrot
bindsym $mod+Print --release exec $ns i3-scrot -w
bindsym $mod+Shift+Print --release exec $ns i3-scrot -s
bindsym $mod+Shift+h exec xdg-open /usr/share/doc/manjaro/i3_help.pdf
bindsym $mod+Ctrl+x --release exec $ns xkill
bindsym $mod+Ctrl+s exec $ns mysql-workbench

# get a random bill frisell background
bindsym $mod+9 exec $ns /home/david/scripts/frisell_background.sh

# get a random ukiyoe background
bindsym $mod+Control+9 exec $ns /home/david/scripts/ukiyoe_background.sh

# get a black background
bindsym $mod+Shift+9 exec $ns /home/david/scripts/blackbackground.sh

# get a painting background
bindsym $mod+Shift+Control+9 exec $ns /home/david/scripts/painting_background.sh

# focus_follows_mouse no

# change focus
bindsym $mod+j focus left
#bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
#bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+h split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'
bindsym $mod+q split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
#bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Monitor names
set $mon1 eDP1
set $mon2 HDMI1

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $wsa "a"
set $wsc "c=cmus"
set $wse "e=email"
set $wsg "g"
set $wsk "k"
set $wsn "n=nextcloud"
set $wsp "p=PaleMoon"
set $wst "t=tmux"
set $wsw "w=www"

# assign workspaces to monitors
workspace $ws1 output $mon1
workspace $ws2 output $mon1
workspace $ws3 output $mon2
workspace $ws4 output $mon2
workspace $ws5 output $mon2
workspace $wsa output $mon2
workspace $wsc output $mon2
workspace $wse output $mon1
workspace $wsg output $mon2
workspace $wsk output $mon2
workspace $wsn output $mon2
workspace $wsp output $mon1
workspace $wst output $mon2
workspace $wsw output $mon2

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+a workspace $wsa
bindsym $mod+c workspace $wsc
bindsym $mod+e workspace $wse
bindsym $mod+g workspace $wsg
bindsym $mod+k workspace $wsk
bindsym $mod+n workspace $wsn
bindsym $mod+p workspace $wsp
bindsym $mod+t workspace $wst
bindsym $mod+w workspace $wsw

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
#bindsym $mod+Ctrl+e move container to workspace $wse
bindsym $mod+Ctrl+t move container to workspace $wst

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+a move container to workspace $wsa; workspace $wsa
bindsym $mod+Shift+c move container to workspace $wsc; workspace $wsc
bindsym $mod+Shift+g move container to workspace $wsg; workspace $wsg
bindsym $mod+Shift+k move container to workspace $wsk; workspace $wsk
bindsym $mod+Shift+p move container to workspace $wsp; workspace $wsp
bindsym $mod+Shift+t move container to workspace $wst; workspace $wst
bindsym $mod+Shift+w move container to workspace $wsw; workspace $wsw

# Open applications on specific workspaces
assign [class="Thunderbird"] $wse
assign [class="Atom"] $wsa
assign [class="Audacity"] $wsa
assign [class="Pale moon"] $wsp
assign [class="Opera"] $wsw
assign [class="Gimp"] $wsg
assign [class="GParted"] $wsg
assign [class="Nextcloud"] $wsn
assign [class="kdenlive"] $wsk
assign [class="kid3"] $wsk
bindsym $mod+Ctrl+k exec $ns kid3; workspace $wsk

assign [instance="cmus"] $wsc
for_window [instance="tmux"] $wst
# assign [class="Pcmanfm"] $ws3
# assign [class="Skype"] $ws5
#
# fix popup window in atom that goes astray
for_window [instance="electron"] → $wsa

# for letter workspaces, use $mod + control to launch and go there
# launch gimp and go to that workspace
bindsym $mod+Control+g exec gimp; workspace $wsg

# launch atom and go to that workspace
bindsym $mod+Control+a exec atom; workspace $wsa

#
# launch cmus in a urxvt instance on workspace c
bindsym $mod+Control+c exec urxvt -name cmus -e cmus

# launch thunderbird and go to workspace e
bindsym $mod+Control+e exec thunderbird; workspace $wse

# launch nextcloud and go to workspace n
bindsym $mod+Ctrl+n exec $ns nextcloud; workspace $wsn

# launch palemoon and go to workspace p
bindsym $mod+Ctrl+p exec $ns palemoon; workspace $wsp
#
# launch Opera and go to workspace w
bindsym $mod+Ctrl+w exec $ns opera; workspace $wsw
#
# -name * above defines window instance
#for_window [instance="cmus"] → $wsc



# Open specific applications in floating mode
for_window [title="alsamixer"] floating enable border pixel 1
for_window [class="calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
# for_window [class="GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Manjaro-hello"] floating enable
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [title="About Pale Moon"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable
for_window [class="Yad"] floating enable
for_window [instance="electron"class="Yad"] floating enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
# bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
#
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+r)eload, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec $ns i3exit lock, mode "default"
    bindsym s exec $ns i3exit suspend, mode "default"
    bindsym u exec $ns i3exit switch_user, mode "default"
    bindsym e exec $ns i3exit logout, mode "default"
    bindsym h exec $ns i3exit hibernate, mode "default"
    bindsym r exec $ns i3exit reboot, mode "default"
    bindsym Shift+r reload
    bindsym Shift+s exec $ns i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym l resize shrink height 5 px or 5 ppt
        bindsym semicolon resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Lock screen
# bindsym $mod+9 exec $ns blurlock

# Autostart applications
exec $ns xautolock -time 12 -locker blurlock -notify 20 -notifier "notify-send -t 5000 -- 'locking momentarily . . .'"
# /etc/systemd/system/rsync.timer takes care of rsync backup script
#
# fresh background at startup and on every reload
exec_always $ns feh --randomize --bg-max /mnt/HDD-audio-images/.paper/*
# launch script to create random background hourly
exec $ns /home/david/scripts/background.sh &
#
exec $ns compton -bf
exec $ns /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# exec $ns atom
# exec $ns nitrogen --restore; sleep 1; compton -b
# exec $ns manjaro-hello
exec $ns nm-applet
exec $ns xfce4-power-manager
exec $ns pamac-tray
exec $ns clipit
# exec $ns blueman-applet
# exec_always $ns sbxkb
exec $ns start_conky_maia
# exec $ns start_conky_green
exec_always $ns ff-theme-util
exec_always $ns fix_xcursor
# on startup launch cmus in a urxvt instance on workspace c
#exec $ns urxvt -name cmus -e cmus; $wsc

exec $ns "tmux has-session -t default || urxvt -name -e tmux new -s default"

# MATH SCRATCHPAD
for_window [instance="math"] floating enable
for_window [instance="math"] reset size 400 200.

for_window [instance="math"] border pixel 7
for_window [instance="math"] move scratchpad

# start a math scratchpad when xsession is started
exec $ns urxvt -name math -e bc

bindsym $mod+x [instance="math"] scratchpad show; [instance="math"] move position center
bindsym $mod+Shift+x [instance="math"] move scratchpad

exec $ns /usr/lib/geoclue-2.0/demos/agent
exec $ns redshift-gtk

# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your
# terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.
set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15

# Start i3bar to display a workspace bar (plus the system information i3status if available)
# HDMI status bar
bar {
    output $mon2
    font pango: System San Francisco Display 12
	#i3bar_command i3bar
	#status_command i3blocks -c ~/.config/i3/i3blocks/i3blocks.conf
	#position bottom
  status_command /home/david/scripts/conky-i3bar

	tray_output $mon2

	bindsym button4 nop
	bindsym button5 nop
	strip_workspace_numbers yes

    colors {
        background #222D31
        statusline #F9FAF9
        separator  #454947

#                      border  backgr. text
        focused_workspace  #F9FAF9 #16a085 #292F34
        active_workspace   #595B5B #353836 #FDF6E3
        inactive_workspace #595B5B #222D31 #EEE8D5
        binding_mode       #16a085 #2C2C2C #F9FAF9
        urgent_workspace   #16a085 #FDF6E3 #E5201D
    }
}

# separate status bar for laptop
bar {
       output $mon1
       status_command i3status


       font pango: Hack 11
# Hide laptop bar unless $mod is pressed
#
#
       mode hide
       position top
}





# hide/unhide i3status bar
bindsym $mod+m bar mode toggle

# Theme colors
# class                   border  backgr. text    indic.   child_border
  client.focused          #556064 #556064 #80FFF9 #FDF6E3
  client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
  client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
  client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
  client.placeholder      #000000 #0c0c0c #ffffff #000000

  client.background       #2B2C2B

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 14
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+F5 mode "$mode_gaps"

mode "$mode_gaps" {
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
# dmenu launcher on F1
exec_always $ns xmodmap -e "clear F1"
bindsym --release F1 exec $ns dmenu_recency -m 0 -p "launch:" -fn 'System San Francisco Display-16'
#
#
# Set F4 to launch dmenu screen script--switcher between single and dual monitors
exec_always $ns xmodmap -e "clear F4"
bindsym --release F4 exec $ns ~/scripts/screen_stuff_dmenu.sh

# Set F5 to launch dmenu passmenu script
exec_always $ns xmodmap -e "clear F5"
bindsym --release F5 exec $ns ~/scripts/passmenu.sh
bindsym $mod+F5 exec $ns ~/scripts/passmenu2.sh

# Set F8 to launch leave script with dmenu
exec_always $ns xmodmap -e "clear F8"
bindsym --release F8 exec $ns ~/scripts/leave.sh
#
# Set F9 to launch cmus playlist script
exec_always $ns xmodmap -e "clear F9"
bindsym --release F9 exec $ns ~/scripts/cmus-album-playlist.sh
#
# Shuffle On/Off with F10
exec_always $ns xmodmap -e "clear F10"
bindsym --release F10 exec $ns ~/scripts/shuffle_toggle.sh
#
#
# Set F11 to toggle play/pause in cmus
exec_always $ns xmodmap -e "clear F11"
bindsym --release F11 exec ~/scripts/pause-toggle

# next song in cmus with F12
exec_always $ns xmodmap -e "clear F12"
bindsym --release F12 exec $ns ~/scripts/play-next
